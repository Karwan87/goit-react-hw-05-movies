{"version":3,"file":"static/js/76.878b94f2.chunk.js","mappings":"oNACA,EAAgC,4BAAhC,EAAwE,wBAAxE,EAAiH,6BAAjH,EAAwJ,sBAAxJ,EAA0L,wB,SC4D1L,MAtDA,YAA4B,IAAZA,EAAW,EAAXA,QACd,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAE0CP,EAF1C,4BAPY,qCAWTQ,MAAK,SAAAC,GACJJ,GAAW,GACXF,EAAQM,EAASC,KAAKR,KACvB,IACAS,OAAM,SAAAC,GACLC,QAAQD,MAAM,6BAA8BA,EAC7C,GACJ,GAAE,CAACZ,KAGF,gBAAKc,UAAWC,EAAhB,SACGX,GACC,yCAEA,wBACGF,EAAKc,KAAI,SAACC,EAAOC,GAAR,OACR,0BACGD,EAAME,cACL,gBACEC,IAAG,yCAAoCH,EAAME,cAC7CE,IAAKJ,EAAMK,QAGb,gBAAKR,UAAWC,EAAhB,UACE,cAAGD,UAAWC,EAAd,yBAGJ,2BACE,eAAID,UAAWC,EAAf,SAAkCE,EAAMK,QACxC,gBAAIR,UAAWC,EAAf,wBACcE,EAAMM,kBAdxB,UAAYN,EAAMO,GAAlB,YAAwBN,GADhB,OAwBnB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"CastContainer\":\"Cast_CastContainer__Yqkam\",\"ActorName\":\"Cast_ActorName__93D+n\",\"ActorCharacter\":\"Cast_ActorCharacter__jdV5b\",\"NoImage\":\"Cast_NoImage__aBE49\",\"TextNoImg\":\"Cast_TextNoImg__wUV4e\"};","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport styles from './Cast.module.css';\n\nconst API_KEY = '4315a3747153818fe39eb54a50eb0402';\n\nfunction Cast({ movieId }) {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n      )\n      .then(response => {\n        setLoading(false);\n        setCast(response.data.cast);\n      })\n      .catch(error => {\n        console.error('Error fetching movie cast:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <div className={styles.CastContainer}>\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <ul>\n          {cast.map((actor, index) => (\n            <li key={`${actor.id}-${index}`}>\n              {actor.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={actor.name}\n                />\n              ) : (\n                <div className={styles.NoImage}>\n                  <p className={styles.TextNoImg}>No image</p>\n                </div>\n              )}\n              <ul>\n                <li className={styles.ActorName}>{actor.name}</li>\n                <li className={styles.ActorCharacter}>\n                  Character: {actor.character}\n                </li>\n              </ul>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Cast;\n"],"names":["movieId","useState","cast","setCast","loading","setLoading","useEffect","axios","then","response","data","catch","error","console","className","styles","map","actor","index","profile_path","src","alt","name","character","id"],"sourceRoot":""}