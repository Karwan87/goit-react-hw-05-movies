{"version":3,"file":"static/js/888.fe77b7b8.chunk.js","mappings":"2NACA,EAAiC,qCAAjC,EAAoF,kCAApF,EAAoI,kCAApI,EAAmL,iCAAnL,EAA6N,6BAA7N,EAAyQ,mCAAzQ,EAAsT,8BAAtT,EAAiW,iC,SCQ3VA,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,2BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAkGrB,MAhGA,WACE,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAsCN,EAAAA,EAAAA,WAAS,GAA/C,eAAOO,EAAP,KAAoBC,EAApB,KA8BA,IA5BAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAC6CZ,EAD7C,oBAZY,qCAcTa,MAAK,SAAAC,GACJR,GAAW,GACXF,EAAgBU,EAASC,KAC1B,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAM,gCAAiCA,EAChD,GACJ,GAAE,CAACjB,IAkBAK,EACF,OAAO,wCAET,IAAMc,EAA6C,GAA5BhB,EAAaiB,aAEpC,OACE,4BACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGnB,EAAaoB,cACZ,gBACEC,IAAG,yCAAoCrB,EAAaoB,aACpDE,IAAKtB,EAAauB,WAIxB,iBAAKL,UAAWC,EAAhB,WACE,gBAAID,UAAWC,EAAf,UACGnB,EAAauB,MADhB,KACyBvB,EAAawB,aAAaC,UAAU,EAAG,GADhE,QAGA,yCAAiBT,EAAjB,QACA,uCACA,8BAAMhB,EAAa0B,aAEnB,qCACA,8BAAM1B,EAAa2B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBAG5D,iBAAKb,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,qCACA,mBAAQD,UAAWC,EAAgBa,QA9ChB,WACvB3B,GAAY,SAAA4B,GAAS,OAAKA,CAAL,IAEhB7B,GACHG,GAAe,EAElB,EAwCK,SACc,UAEd,mBAAQW,UAAWC,EAAmBa,QAzChB,WAC1BzB,GAAe,SAAA0B,GAAS,OAAKA,CAAL,IAEnB3B,GACHD,GAAY,EAEf,EAmCK,SACiB,gBAGnB,2BACGD,IACC,0BACE,SAAC,EAAA8B,SAAD,CAAUC,UAAU,6CAApB,UACE,SAACzC,EAAD,CAAMG,QAASA,QAKpBS,IACC,0BACE,SAAC,EAAA4B,SAAD,CAAUC,UAAU,gDAApB,UACE,SAACvC,EAAD,CAASC,QAASA,aAO/B,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieContainer\":\"MovieDetails_MovieContainer__xyS+s\",\"MovieDetail\":\"MovieDetails_MovieDetail__5PhFP\",\"MoviePoster\":\"MovieDetails_MoviePoster__abbRE\",\"MovieTitle\":\"MovieDetails_MovieTitle__Aj4a0\",\"Extras\":\"MovieDetails_Extras__cthkL\",\"BtnContainer\":\"MovieDetails_BtnContainer__gBDO4\",\"CastBtn\":\"MovieDetails_CastBtn__OLbFP\",\"ReviewsBtn\":\"MovieDetails_ReviewsBtn__uMvef\"};","import React, { useEffect, useState, lazy, Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n// import Cast from '../Cast/Cast';\n// import Reviews from '../Reviews/Reviews';\nimport styles from './MovieDetails.module.css';\n\nconst API_KEY = '4315a3747153818fe39eb54a50eb0402';\nconst Cast = lazy(() => import('../Cast/Cast'));\nconst Reviews = lazy(() => import('../Reviews/Reviews'));\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => {\n        setLoading(false);\n        setMovieDetails(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching movie details:', error);\n      });\n  }, [movieId]);\n\n  const handleToggleCast = () => {\n    setShowCast(prevState => !prevState);\n\n    if (!showCast) {\n      setShowReviews(false);\n    }\n  };\n\n  const handleToggleReviews = () => {\n    setShowReviews(prevState => !prevState);\n\n    if (!showReviews) {\n      setShowCast(false);\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  const votePercentage = movieDetails.vote_average * 10;\n\n  return (\n    <div>\n      <div className={styles.MovieContainer}>\n        <div className={styles.MoviePoster}>\n          {movieDetails.poster_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w200${movieDetails.poster_path}`}\n              alt={movieDetails.title}\n            />\n          )}\n        </div>\n        <div className={styles.MovieDetail}>\n          <h2 className={styles.MovieTitle}>\n            {movieDetails.title} ({movieDetails.release_date.substring(0, 4)})\n          </h2>\n          <h5>User Score: {votePercentage}%</h5>\n          <h4>Overview:</h4>\n          <h5> {movieDetails.overview}</h5>\n\n          <h4>Genres:</h4>\n          <h5> {movieDetails.genres.map(genre => genre.name).join(', ')}</h5>\n        </div>\n      </div>\n      <div className={styles.BtnContainer}>\n        <h4 className={styles.Extras}>Additional information</h4>\n        <button className={styles.CastBtn} onClick={handleToggleCast}>\n          {showCast ? 'Cast' : 'Cast'}\n        </button>\n        <button className={styles.ReviewsBtn} onClick={handleToggleReviews}>\n          {showReviews ? 'Reviews' : 'Reviews'}\n        </button>\n      </div>\n      <div>\n        {showCast && (\n          <div>\n            <Suspense fallback={<div>Loading Cast...</div>}>\n              <Cast movieId={movieId} />\n            </Suspense>\n          </div>\n        )}\n\n        {showReviews && (\n          <div>\n            <Suspense fallback={<div>Loading Reviews...</div>}>\n              <Reviews movieId={movieId} />\n            </Suspense>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\nMovieDetails.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default MovieDetails;\n"],"names":["Cast","lazy","Reviews","movieId","useParams","useState","movieDetails","setMovieDetails","loading","setLoading","showCast","setShowCast","showReviews","setShowReviews","useEffect","axios","then","response","data","catch","error","console","votePercentage","vote_average","className","styles","poster_path","src","alt","title","release_date","substring","overview","genres","map","genre","name","join","onClick","prevState","Suspense","fallback"],"sourceRoot":""}